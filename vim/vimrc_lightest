" ==============================================================================
" aeddi's Vim config - 11/2016
" ==============================================================================
"
"	A. BASIC CONFIG
"		1. Interface
"		2. Colors
"		3. Indentation
"		4. Search
"		5. Key mapping
"		6. Misc
"		7. Yankless paste
"
"	B. PERSISTENCE
"		1. Backups
"		2. Swap files
"		3. Restore session
"		4. Save buffers
"		5. Undo history
"
" ==============================================================================


" =========================
" A. BASIC CONFIG
" =========================

"1" Interface :
"--------------------
set title						" Display filename in title bar
set ttyfast						" More reactive displaying
set number						" Show line number
set mousehide					" Hide mouse cursor when typing
set showcmd						" Show incomplete command
set wildmenu					" Display command auto-completion with tab
set splitbelow					" New horizontal split appears below
set splitright					" New vertical split appears on right
"--------------------

"2" Colors :
"--------------------
set t_Co=256					" Enable 256 colors mode
syntax on						" Syntax coloration
"--------------------

"3" Indentation :
"--------------------
set noexpandtab					" Disable tab to spaces
set autoindent					" Same indent as previous lines
set smartindent					" Auto-indentation in while, if, etc...
set tabstop=4					" 4 column by tab
set shiftwidth=4				" Auto-indent with 4 columns
set backspace=indent,eol,start	" Restore normal backspace comportement
"--------------------

"4" Search :
"--------------------
set history=500					" 500 command line history
set ignorecase					" Ignore case in search
set smartcase					" Don't ignore case when capitale is typed
set incsearch					" Highlight typed word during typing
set hlsearch					" Highlight typed word
"--------------------

"5" Key mapping :
"--------------------
" Enable/Disable paste mode
set pastetoggle=<F6>
" Replace escape key
imap ;j <Esc>
nmap ;j <Esc>
vmap ;j <Esc>
" Move between splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
" Switch tab
nnoremap { :tabprevious <CR>
nnoremap } :tabnext <CR>
" Allow saving file as sudo
command W :execute ':silent w !sudo tee % > /dev/null' | :edit!
command Wq :execute ':W' | :q
command WQ :Wq
" Abreviation for tabnew
ca tn tabnew
"--------------------

"6" Misc :
"-------------------- 
set nocompatible				" Disable vi compatibility
set autoread					" Refresh current file when modified by another editor
set undolevels=500				" 500 undo history
set showmatch					" Show matching bracket
set matchtime=10				" Show matching bracket for 1 second
set scrolloff=5					" Display minimum five lines around the cursor
set sidescrolloff=15			" Display minimum five columns around the cursor
set cursorline					" Display horizontal line on the cursor position
set nowrap						" Don't wrap text on multiple lines
"--------------------

"7" Yankless paste :
"--------------------
function! RestoreRegister()
    let @" = s:restore_reg
    return ''
endfunction

function! s:Repl()
    let s:restore_reg = @"
    return "p@=RestoreRegister()\<cr>"
endfunction

vnoremap <silent> <expr> p <sid>Repl()
"--------------------


" =========================
" B. PERSISTENCE
" =========================

"1" Backups :
"--------------------
if isdirectory($HOME . '/.vim/backup') == 0
	:silent !mkdir -p ~/.vim/backup >/dev/null 2>&1
endif
set backupdir-=.
set backupdir+=.
set backupdir-=~/
set backupdir^=~/.vim/backup/
set backup
"--------------------

"2" Swap files :
"--------------------
if isdirectory($HOME . '/.vim/swap') == 0
	:silent !mkdir -p ~/.vim/swap >/dev/null 2>&1
endif
set directory=~/.vim/swap//
set directory+=.
"--------------------

"3" Restore session :
"--------------------
if !has('nvim')
	set viminfo+=n~/.vim/viminfo
endif
"--------------------

"4" Save buffers :
"--------------------
map <F5> :mksession! .mysession.vim<CR>
"--------------------

"5" Undo history :
"--------------------
if exists("+undofile")
	if isdirectory($HOME . '/.vim/undo') == 0
		:silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
	endif
	set undodir=~/.vim/undo//
	set undodir=~/.vim/undo//
	set undofile
endif
"--------------------



" Include local file
"--------------------
let $LOCALFILE=expand("~/.vimrc_local")
if filereadable($LOCALFILE)
	source $LOCALFILE
endif
"--------------------
